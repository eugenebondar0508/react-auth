{"version":3,"sources":["features/userSlice.js","Components/Login.js","Components/Logout.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","className","onSubmit","event","preventDefault","loggedIn","handleSubmit","type","placeholder","value","required","onChange","target","minLength","Logout","onClick","handleLogout","App","useSelector","configureStore","reducer","useReducer","ReactDOM","render","store","document","getElementById"],"mappings":"iPAEaA,EAAYC,YAAY,CACnCC,KAAK,OACLC,aAAa,CACXC,KAAK,MAEPC,SAAS,CACPC,MAAO,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,SAKZ,EAAwBJ,EAAUW,QAA3BL,EAAP,EAAOA,MAAOI,EAAd,EAAcA,OAERE,EAAa,SAACL,GAAD,OAAWA,EAAMH,KAAKA,MAEjCJ,IAAf,Q,OCyBea,EAzCD,WACZ,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAYjB,OACE,qBAAKC,UAAU,QAAf,SACE,uBAAMA,UAAU,cAAcC,SAAU,SAACC,GAAD,OAZvB,SAACA,GACpBA,EAAMC,iBAENL,EAASb,EAAM,CACbS,MAAOA,EACPE,SAAUA,EACVQ,UAAU,KAMyCC,CAAaH,IAAhE,UACE,8CACA,uBACEI,KAAK,QACLC,YAAY,QACZC,MAAOd,EACPe,UAAQ,EACRC,SAAU,SAACR,GAAD,OAAWP,EAASO,EAAMS,OAAOH,UAE7C,uBACEF,KAAK,WACLC,YAAY,WACZC,MAAOZ,EACPa,UAAQ,EACRG,UAAU,IACVF,SAAU,SAACR,GAAD,OAAWL,EAAYK,EAAMS,OAAOH,UAEhD,wBAAQF,KAAK,SAASN,UAAU,aAAhC,yBCfOa,G,YApBA,WACb,IAAMf,EAAWC,cAOjB,OACE,qBAAKC,UAAU,SAAf,SACE,wBACEA,UAAU,cACVc,QAAS,SAACZ,GAAD,OATM,SAACA,GACpBA,EAAMC,iBAENL,EAAST,KAMe0B,CAAab,IAFnC,wBCESc,EAVH,WACV,IAAMjC,EAAOkC,YAAY1B,GAEzB,OACE,8BACGR,EAAO,cAAC,EAAD,IAAa,cAAC,EAAD,OCTZmC,cAAe,CAC5BC,QAAQ,CACNpC,KAAMqC,KCEVC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2978eeb9.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name:'user',\r\n  initialState:{\r\n    user:null\r\n  },\r\n  reducers:{\r\n    login: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {login, logout} = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import React, { useState } from 'react'\r\nimport \"./Login.css\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../features/userSlice';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(login({\r\n      email: email,\r\n      password: password,\r\n      loggedIn: true,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <form className=\"login__form\" onSubmit={(event) => handleSubmit(event)}>\r\n        <h1>Member Login</h1>\r\n        <input \r\n          type=\"email\" \r\n          placeholder=\"Email\" \r\n          value={email} \r\n          required\r\n          onChange={(event) => setEmail(event.target.value)}\r\n        />\r\n        <input \r\n          type=\"password\" \r\n          placeholder=\"Password\" \r\n          value={password}\r\n          required \r\n          minLength=\"6\"\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"login__btn\" >Login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../features/userSlice';\r\nimport \"./Logout.css\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n    <div className=\"logout\">\r\n      <button \r\n        className=\"logout__btn\" \r\n        onClick={(event) => handleLogout(event)}\r\n      >\r\n        Logout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout\r\n","import React from 'react'\r\nimport Login from './Components/Login'\r\nimport \"./App.css\"\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/userSlice';\r\nimport Logout from './Components/Logout';\r\n\r\nconst App = () => {\r\n  const user = useSelector(selectUser)\r\n\r\n  return (\r\n    <div>\r\n      {user ? <Logout /> : <Login />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport useReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer:{\r\n    user: useReducer\r\n  }\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./app/store\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}